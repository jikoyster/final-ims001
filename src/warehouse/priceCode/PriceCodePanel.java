/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warehouse.priceCode;

import accounts.customers.*;
import config.Functions;
import java.awt.Font;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jake-LAPTOP
 */
public class PriceCodePanel extends javax.swing.JPanel {
    private Connection conn;
    private ResultSet rs = null;
    private Statement statement = null;
    
    private String table = "PRICE_CODE";
    /**
     * Creates new form CustomersPanel
     */
    public PriceCodePanel(Connection connection) {
        try {
            initComponents();
            
            this.conn = connection;
            this.statement = this.conn.createStatement();
            update_table();
        } catch (SQLException ex) {
            Logger.getLogger(PriceCodePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void update_table(){
        try { 
            rs = statement.executeQuery(""
                    + "SELECT CODE, ACTUAL_PRICE, DATEADDED as Date "
                    + "FROM "+table );
//            this.CustomersTable.setModel( DbUtils.resultSetToTableModel(rs) );


            DefaultTableModel model = (DefaultTableModel) this.PriceCodeTable.getModel();
            model.setRowCount(0); //clearn table
            while( rs.next() ){
               Object[] rowData = {
                                    rs.getString("CODE"), 
                                    String.format(Locale.US, "%,.2f", rs.getDouble("ACTUAL_PRICE")),
                                    "<HTML>"+ new SimpleDateFormat("MMMM dd, yyyy\nEEEE hh:mm a").format(rs.getTimestamp("DATE")).replace("\n", "<BR>")+"</HTML>"
               };
               model.addRow(rowData);
            }
            
            this.PriceCodeTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
            
//            DefaultTableCellRenderer testR = new DefaultTableCellRenderer();
//            testR.setText("bang");

            DefaultTableCellRenderer usercolRenderer = new DefaultTableCellRenderer();
            usercolRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
            
//            this.CustomersTable.getColumnModel().getColumn(0).setMaxWidth(200);
//            this.CustomersTable.getColumnModel().getColumn(1).setCellRenderer(usercolRenderer);
//            this.CustomersTable.getColumnModel().getColumn(2).setCellRenderer(usercolRenderer);
            
//            this.CustomersTable.getColumnModel().getColumn(2).setCellRenderer(testR);
            
            DefaultTableCellRenderer idcolRenderer = new DefaultTableCellRenderer();
            idcolRenderer.setHorizontalAlignment(SwingConstants.CENTER);
            this.PriceCodeTable.getColumnModel().getColumn(0).setCellRenderer(idcolRenderer);
            
            config.Functions.updateRowHeights(PriceCodeTable);
            this.PriceCodeTable.repaint();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PriceCodeTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        newBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        newBtn.setForeground(new java.awt.Color(0, 153, 0));
        newBtn.setMnemonic('n');
        newBtn.setText("New");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(0, 0, 153));
        updateBtn.setMnemonic('u');
        updateBtn.setText("Update Selected Record");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(153, 0, 0));
        deleteBtn.setMnemonic('d');
        deleteBtn.setText("Delete Selected Record");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        PriceCodeTable.setAutoCreateRowSorter(true);
        PriceCodeTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        PriceCodeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Actual Price", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PriceCodeTable.setFocusable(false);
        PriceCodeTable.setIntercellSpacing(new java.awt.Dimension(10, 10));
        PriceCodeTable.setMinimumSize(new java.awt.Dimension(100, 120));
        PriceCodeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(PriceCodeTable);

        jLabel1.setFont(new java.awt.Font("Anton", 0, 36)); // NOI18N
        jLabel1.setText("Price Codes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newBtn)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        PriceCodeEditorPanel panel = new PriceCodeEditorPanel();
        
        Object[] options = {"Submit", "Cancel"};
        int returnVal = JOptionPane.showOptionDialog(null, panel, "Enter new price code: ",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, null);
        if( returnVal == 0 ){
            PriceCode newPriceCode = new PriceCode();
            
                newPriceCode.setCode(panel.get_code() );
                newPriceCode.setActualPrice(panel.get_actualPrice());
               
                String sql = "INSERT INTO "+table+" "
                        + "(CODE, ACTUAL_PRICE, DATEADDED) "
                        + "VALUES ('"+newPriceCode.getCode()+"',"+newPriceCode.getActualPrice()+", CURRENT_TIMESTAMP)";
                System.out.println(sql);
            try {
                statement.execute(sql);
            } catch (java.sql.SQLIntegrityConstraintViolationException constraintEx){
                JOptionPane.showMessageDialog(null, "<HTML><B color='red'>Code</B> is not unique!</HTML>");
            } catch (SQLException ex) {
                Logger.getLogger(PriceCodePanel.class.getName()).log(Level.SEVERE, null, ex);
            } 
           
        }

            update_table();
    }//GEN-LAST:event_newBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int srow = this.PriceCodeTable.getSelectedRow();
        System.out.println(srow); //display selected row
        String rowCode = null;
        try {
            rowCode = (String) this.PriceCodeTable.getValueAt(srow, 0);
        } catch(java.lang.IndexOutOfBoundsException outOfBoundsException){
            JOptionPane.showMessageDialog(null, "No Record Selected.");
        }
        
        PriceCodeEditorPanel panel = new PriceCodeEditorPanel();
            panel.set_code((String) this.PriceCodeTable.getValueAt(srow, 0) );
            double rowAP = Functions.strToDouble((String) this.PriceCodeTable.getValueAt(srow, 1));
            panel.set_actualPrice( rowAP );
        
        Object[] options = {"Submit", "Cancel"};
        int returnVal = JOptionPane.showOptionDialog(null, panel, "Enter a Number",
            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE,
            null, options, null);
        if( returnVal == 0 ){
            try {
                String sql = "UPDATE "+table 
                        + " SET CODE='"+ panel.get_code()+"', ACTUAL_PRICE="+ panel.get_actualPrice()+" "
                        + " WHERE CODE='"+ rowCode +"'";
                System.out.println("THE QUERY: "+sql);
                statement.execute(sql);
            } catch (SQLException ex) {
                ex.printStackTrace();
            } 
            update_table();
        }       
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
            int srow = this.PriceCodeTable.getSelectedRow();
            String code = String.valueOf( this.PriceCodeTable.getValueAt(srow, 0) );
            String sql = "DELETE FROM "+table+" WHERE CODE='"+code+"'";
            System.out.println(code);
            statement.execute(sql);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        update_table();
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PriceCodeTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
