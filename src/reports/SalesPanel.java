/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reports;

import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jake-LAPTOP
 */
public class SalesPanel extends javax.swing.JPanel {

    private Connection conn;
    private ResultSet rs = null;
    private Statement statement = null;
    
    private String tblInvoices = "INVOICES";
    /**
     * Creates new form Sales
     */
    public SalesPanel(Connection connection) {
        try {
            initComponents();
            
            this.conn = connection;
            this.statement = this.conn.createStatement();
            
            this.updateYearCB();
            this.update_table();
        } catch (SQLException ex) {
            Logger.getLogger(SalesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void update_table(){
        try {
            String sql = ""
                    + "SELECT ID, DATEADDED as DATE, TOTAL_AMOUNT "
                    + "FROM "+this.tblInvoices+" "
                    + "WHERE YEAR(DATEADDED) = "+ this.getSelectedYear();
            rs = statement.executeQuery(sql);
            
            DefaultTableModel model = (DefaultTableModel) this.salesReportTable.getModel();
            model.setRowCount(0); //clearn table
            while( rs.next() ){
                Object[] rowData = {
                    rs.getString("ID"),
                    "<HTML>"+ new SimpleDateFormat("MMMM dd, yyyy\nEEEE hh:mm a").format(rs.getTimestamp("DATE")).replace("\n", "<BR>")+"</HTML>",
                    String.format("%,.2f", rs.getDouble("TOTAL_AMOUNT"))
                };
                model.addRow(rowData);
            }
        
            this.salesReportTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
            
            DefaultTableCellRenderer grossRenderer = new DefaultTableCellRenderer();
            grossRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
            this.salesReportTable.getColumnModel().getColumn(2).setCellRenderer(grossRenderer);
            
            config.Functions.updateRowHeights(salesReportTable);
            this.salesReportTable.repaint();
        } catch (SQLException ex) {
            Logger.getLogger(SalesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        compute_totalSales();
        
    }
    
    public void updateYearCB(){
        Calendar now = Calendar.getInstance();
        DateFormat format = new SimpleDateFormat("yyyy");
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.yearCB.getModel();
        model.removeAllElements();
        for(int i=0; i<=10; i++){
            model.addElement( String.valueOf(now.get(Calendar.YEAR)-i) );
        }
        this.yearCB.setModel(model);
    }
    
    public void compute_totalSales(){
        double totalSales = 0,
                gross = 0;
        
        int rows = this.salesReportTable.getRowCount();
        
        for(int i=0; i<rows; i++){
            totalSales += Double.valueOf( this.salesReportTable.getValueAt(i, 2).toString().replace(",", "") );
        }
//        String.valueOf(totalSales)
        this.totalSalesTF.setText( String.format("%,.2f", totalSales) );
    }
    
    public int getSelectedYear(){
        int year = 0;
        try {
            year = Integer.parseInt((String) this.yearCB.getSelectedItem());
        } catch (NumberFormatException numberFormatException) {
        }
        
        return year;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        salesReportTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        yearCB = new javax.swing.JComboBox<>();
        btn_totalSales = new javax.swing.JButton();
        totalSalesTF = new javax.swing.JTextField();

        salesReportTable.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        salesReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoices", "Date", "Gross Sales"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesReportTable.setIntercellSpacing(new java.awt.Dimension(5, 5));
        salesReportTable.setRowHeight(20);
        jScrollPane1.setViewportView(salesReportTable);

        jLabel1.setFont(new java.awt.Font("Anton", 0, 36)); // NOI18N
        jLabel1.setText("SALES REPORT");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Select a year");

        yearCB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        yearCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yearCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearCBItemStateChanged(evt);
            }
        });

        btn_totalSales.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_totalSales.setText("TOTAL SALES");
        btn_totalSales.setContentAreaFilled(false);

        totalSalesTF.setEditable(false);
        totalSalesTF.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalSalesTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearCB, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_totalSales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalSalesTF, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(yearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalSalesTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_totalSales))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void yearCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearCBItemStateChanged
        this.update_table();
    }//GEN-LAST:event_yearCBItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_totalSales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable salesReportTable;
    private javax.swing.JTextField totalSalesTF;
    private javax.swing.JComboBox<String> yearCB;
    // End of variables declaration//GEN-END:variables
}
